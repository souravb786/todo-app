{"version":3,"sources":["Todo.js","firebase.js","App.js","index.js"],"names":["Todo","props","List","className","ListItem","ListItemAvatar","ListItemText","primary","text","secondary","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","todos","setTodos","input","setInput","console","log","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","todo","FormControl","InputLabel","Input","value","onChange","event","target","Button","disabled","type","variant","color","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAkBeA,MAdf,SAAcC,GAEV,OACI,cAACC,EAAA,EAAD,CAAMC,UAAU,aAAhB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,IAEA,cAACC,EAAA,EAAD,CAAcC,QAASN,EAAMO,KAAMC,UAAU,mB,wCCG5CC,EAZGC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAEMC,YCuDVC,MA5Df,WAAe,MAQaC,mBAAS,IARtB,mBAQNC,EARM,KAQCC,EARD,OASaF,mBAAS,IATtB,mBASNG,EATM,KASCC,EATD,KA+Bb,OArBAC,QAAQC,IAAIH,GAIZI,qBAAU,WAERpB,EAAGqB,WAAW,SAASC,QAAQ,YAAa,QAAQC,YAAW,SAAAC,GAE7DT,EAASS,EAASC,KAAKC,KAAI,SAAAC,GAAG,OAAIA,EAAIC,OAAOC,cAE9C,IAeD,cAHA,CAGA,OAAKpC,UAAU,MAAf,UACE,8CACA,iCAGE,eAACqC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,mCACA,cAACC,EAAA,EAAD,CAAOC,MAAOjB,EAAOkB,SAAU,SAAAC,GAAK,OAAIlB,EAASkB,EAAMC,OAAOH,aAEhE,cAACI,EAAA,EAAD,CAAQC,UAAWtB,EAAOuB,KAAK,SAASC,QAAQ,YAAYC,MAAM,UAAUC,QAvBlE,SAACP,GAEfA,EAAMQ,iBACN3C,EAAGqB,WAAW,SAASuB,IAAI,CACzBf,KAAMb,EACN6B,UAAW5C,IAASU,UAAUmC,WAAWC,oBAG3C9B,EAAS,KAeL,0BAKF,6BAEGH,EAAMY,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CAAM/B,KAAM+B,aCtDtBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.45a1fb96.chunk.js","sourcesContent":["import { ListItem, List, ListItemText, ImageIcon, ListItemAvatar, Avatar } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './Todo.css';\r\n\r\nfunction Todo(props) {\r\n    // props is a property of a component it also help in differentiating the between components\r\n    return (\r\n        <List className=\"todo__list\">\r\n            <ListItem>\r\n                <ListItemAvatar>\r\n                </ListItemAvatar>\r\n                <ListItemText primary={props.text} secondary=\"Deadline\"/>\r\n            </ListItem>\r\n            {/* <li>{props.text}</li>  */}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import firebase from \"firebase\";\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCsmvKoTQHf8b2VnArXHBhpXef83pbycaY\",\r\n    authDomain: \"todo-app-4f952.firebaseapp.com\",\r\n    databaseURL: \"https://todo-app-4f952.firebaseio.com\",\r\n    projectId: \"todo-app-4f952\",\r\n    storageBucket: \"todo-app-4f952.appspot.com\",\r\n    messagingSenderId: \"881748590001\",\r\n    appId: \"1:881748590001:web:7ae9feef71f3ae6266d190\",\r\n    measurementId: \"G-7TYSKJ5ZH1\"\r\n  });\r\n  const db = firebaseApp.firestore();\r\n\r\n  export default db ;","\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Todo from './Todo';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core'; \nimport db from './firebase';\nimport firebase from 'firebase';\nfunction App() {\n  // two fundamentals of react\n  // STATE get cleared after refresh\n  // props\n  // STATE is a short term memory for each component\n  // useState is for providing short term memory\n  // todos is a array\n  // setTodos is for changing our Todos\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState('');\n  console.log(input);\n\n  // when the app loads, we need to listen to the databse and fetch new todos as they get added/removed\n\n  useEffect(()=>{\n    // this code here... fires when the app.js loads\n    db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot=> {\n      // console.log(snapshot.docs.map(doc => doc.data()));\n      setTodos(snapshot.docs.map(doc => doc.data().todo))\n    })\n  }, [] );\n  const addTodo = (event) => {\n    // this will fire off when we click the button\n    event.preventDefault(); // this will stop the refreshing of the page\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    // ...todo is for checking the previous state and then spreading , input is for pushing the new value into it \n    setInput(''); // clearing the input field\n  }\n  return (\n    // this is special HTML which is known as jsx\n    // JSX = javascript + HTML\n    // we can run dynamic job\n    <div className=\"App\">\n      <h1>Hello World!</h1>\n      <form>\n        {/* <h1>Our internal sum  is : {sum}</h1> */}\n        {/* <input value={input} onChange={event => setInput(event.target.value)}/> */}\n        <FormControl>\n          <InputLabel>Wirte Your Todo Here</InputLabel>\n          <Input value={input} onChange={event => setInput(event.target.value)}/>\n        </FormControl>\n        <Button disabled={!input} type=\"submit\" variant=\"contained\" color=\"primary\" onClick={addTodo}>Add To Do</Button>\n        {/* <button type=\"submit\" onClick={addTodo}>Add To Do</button> */}\n      </form>\n      \n\n      <ul>\n        {/* map method is used for a loop in a javaScript */}\n        {todos.map(todo => (\n          <Todo text={todo}/>\n          // <li>{todo}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}